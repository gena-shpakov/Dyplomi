function doGet() {
  return HtmlService.createTemplateFromFile("main.html").evaluate();
}

function include(filename) {
  return HtmlService.createHtmlOutputFromFile(filename).getContent();
}

function loadPage(pageName) {
  var allowed = [
    "lecturer",
    "student",
    "lecturer_login",
    "student_login"
  ];

  if (allowed.indexOf(pageName) !== -1) {
    return HtmlService.createHtmlOutputFromFile(pageName).getContent();
  }

  return '<p>–°—Ç–æ—Ä—ñ–Ω–∫—É "' + pageName + '" –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ.</p>';
}

function getScheduleForDay(day) {
  var sheet = SpreadsheetApp.openById(
    "1Pqx0UDzGQMjl6G0iZtcp5ftiv2YeuOQ8xqn6nYM3_A4"
  ).getSheetByName("–õ–∏—Å—Ç1");
  var data = sheet.getDataRange().getValues();
  if (data.length < 2) return [];

  var filtered = data.filter(function (row, i) {
    return i > 0 && row[0] === day;
  });

  return filtered;
}

// üÜï –ì–Ω—É—á–∫–∏–π –ø–∞—Ä—Å–µ—Ä, —â–æ –ø—ñ–¥—Ç—Ä–∏–º—É—î –±—É–¥—å-—è–∫–∏–π –ø–æ—Ä—è–¥–æ–∫ –∫–æ–ª–æ–Ω–æ–∫
function processImportedData() {
  const ss = SpreadsheetApp.openById("1Pqx0UDzGQMjl6G0iZtcp5ftiv2YeuOQ8xqn6nYM3_A4");
  const rawSheet = ss.getSheetByName("–í—Ö—ñ–¥–Ω—ñ");
  const outputSheet = ss.getSheetByName("–õ–∏—Å—Ç1");

  if (!rawSheet || !outputSheet) return;

  const rawData = rawSheet.getDataRange().getValues();
  if (rawData.length < 2) return;

  const header = rawData[0].map(h => h.toString().toLowerCase().trim());
  const result = [];

  const dayIndex = header.findIndex(h => h.includes("–¥–µ–Ω—å"));
  const pairIndex = header.findIndex(h => h.includes("–ø–∞—Ä–∞") || h.includes("‚Ññ"));
  const subjectIndex = header.findIndex(h => h.includes("–ø—Ä–µ–¥–º–µ—Ç"));
  const teacherIndex = header.findIndex(h => h.includes("–≤–∏–∫–ª–∞–¥–∞—á"));
  const roomIndex = header.findIndex(h => h.includes("–∞—É–¥") || h.includes("–∫–∞–±—ñ–Ω–µ—Ç"));
  const timeIndex = header.findIndex(h => h.includes("—á–∞—Å"));

  if ([dayIndex, pairIndex, subjectIndex, teacherIndex, roomIndex, timeIndex].some(i => i === -1)) {
    Logger.log("‚ùå –ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ –≤—Å—ñ –Ω–µ–æ–±—Ö—ñ–¥–Ω—ñ –∫–æ–ª–æ–Ω–∫–∏ –≤ –∞—Ä–∫—É—à—ñ '–í—Ö—ñ–¥–Ω—ñ'");
    return;
  }

  rawData.slice(1).forEach(row => {
    const day = row[dayIndex];
    const pair = row[pairIndex];
    const subject = row[subjectIndex];
    const teacher = row[teacherIndex];
    const room = row[roomIndex];
    const time = row[timeIndex];

    if (day && pair && subject) {
      result.push([day, pair, subject, teacher || "", room || "", time || ""]);
    }
  });

  outputSheet.clear();
  outputSheet.appendRow(["–î–µ–Ω—å", "–ü–∞—Ä–∞", "–ü—Ä–µ–¥–º–µ—Ç", "–í–∏–∫–ª–∞–¥–∞—á", "–ê—É–¥–∏—Ç–æ—Ä—ñ—è", "–ß–∞—Å"]);

  if (result.length > 0) {
    outputSheet.getRange(2, 1, result.length, 6).setValues(result);
  }
}

// üÜï –ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–∏–π —Ç—Ä–∏–≥–µ—Ä ‚Äî —è–∫—â–æ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä –≤—Å—Ç–∞–≤–ª—è—î –∞–±–æ —Ä–µ–¥–∞–≥—É—î "–í—Ö—ñ–¥–Ω—ñ"
function onEdit(e) {
  const sheet = e.source.getActiveSheet();
  if (sheet.getName() === "–í—Ö—ñ–¥–Ω—ñ") {
    processImportedData();
  }
}
